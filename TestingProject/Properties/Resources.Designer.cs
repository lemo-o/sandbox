//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestingProject.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TestingProject.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using OpenQA.Selenium;
        ///using OpenQA.Selenium.Support.UI;
        ///using System;
        ///
        ///namespace Selenium //my next step is to change most of these to have correct private/public consolidation. 
        ///{
        ///    //public class _compost
        ///    //{
        ///    //    public By _locator;
        ///    //    private IWebDriver _driver;
        ///    //}
        ///
        ///    public class BaseComponent
        ///    {
        ///        private protected IBrowsers _driver { get; set; }
        ///        private protected By _locator { get; set; } //-look up how this works, future me! ~~~ Future me say [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseComponent {
            get {
                return ResourceManager.GetString("BaseComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Selenium
        ///{
        ///    public class Button : BaseComponent
        ///    {
        ///        //Button(IBrowsers driver, By locator) 
        ///        //{
        ///        //    _driver = driver;
        ///        //    _locator = locator;
        ///        //}
        ///
        ///        public void Click()
        ///        {
        ///            FindElement().Click();
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string Button {
            get {
                return ResourceManager.GetString("Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Selenium
        ///{
        ///    public class Constants
        ///    {
        ///        public static string[] Names =
        ///        {
        ///            &quot;John Denver&quot;,
        ///            &quot;Lottery Winner&quot;,
        ///            &quot;Jessie Dean&quot;,
        ///            &quot;Aisha Mathews&quot;,
        ///            &quot;Traci Sawyer&quot;,
        ///            &quot;Taran Chandler&quot;,
        ///            &quot;Clarence Henderson&quot;,
        ///            &quot;Zahra Curry&quot;,
        ///            &quot;Millie-Rose Pruitt&quot;
        ///        };
        ///
        ///        public static string[] Address1 =
        ///        {
        ///            &quot;123 America Street&quot;,
        ///            &quot;9576 West W E [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Constants {
            get {
                return ResourceManager.GetString("Constants", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using OpenQA.Selenium;
        ///using OpenQA.Selenium.Chrome;
        ///
        ///namespace Selenium
        ///{
        ///    public interface IBrowsers
        ///    {
        ///        IWebDriver CurrentDriver();
        ///        IWebElement Locator();
        ///        //object Navigate();
        ///        //IWebDriver ChromeDriver();
        ///        //Edge();
        ///        //Firefox();
        ///
        ///    }
        ///
        ///    class Driver : IBrowsers
        ///    {
        ///        private IWebDriver _driver;
        ///        private IWebElement _locator;
        ///        private Driver()
        ///        {
        ///            _driver = new ChromeDriver(); //variable n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DriverLogic {
            get {
                return ResourceManager.GetString("DriverLogic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using OpenQA.Selenium;
        ///
        ///namespace Selenium
        ///{
        ///    public class Dropdowns : BaseComponent
        ///    {
        ///        private IBrowsers _driver;
        ///        private By _locator;
        ///
        ///        public Dropdowns(IBrowsers driver, By locater)
        ///        {
        ///            _locator = locater;
        ///            _driver = driver;
        ///        }
        ///
        ///    }
        ///
        ///}
        ///.
        /// </summary>
        internal static string Dropdowns {
            get {
                return ResourceManager.GetString("Dropdowns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using OpenQA.Selenium;
        ///
        ///namespace fjksadbfajskdh //I don&apos;t think this file actually does anything anymore. Taught me abstracts though!
        ///{
        ///    abstract class ElementFinder
        ///    {
        ///        public abstract object FindElement(); //i have no idea if this is correct
        ///    }
        ///
        ///    class ChromeFinder : ElementFinder //does it need to be chrome? I don&apos;t ~think~ so
        ///    {
        ///        private object _findElement;
        ///
        ///        public ChromeFinder()
        ///        {
        ///            _findElement = Chrome.Driver().FindElement(By.XPa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ElementFinder {
            get {
                return ResourceManager.GetString("ElementFinder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //using OpenQA.Selenium;
        /////using System;
        ///
        /////namespace Selenium
        /////{
        /////    public class LoadCreator : BaseComponent
        /////    {
        ///
        /////        private IBrowsers _driver;
        /////        private By _locator;
        /////        //Random _rand = new Random();
        /////        private Random _rand;
        ///
        /////        public LoadCreator(IBrowsers driver, By locator, Random rand)
        /////        {
        /////            _driver = driver;
        /////            _locator = locator;
        /////            _rand = rand;
        /////        }
        ///
        ///
        /////        public void ChangeThisNa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoadCreator {
            get {
                return ResourceManager.GetString("LoadCreator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace Selenium
        ///{
        ///    public class Navigate : BaseComponent
        ///    {
        ///        public void Nav(string url) //I guess I ~could~ put this in BaseComponent, but considering this is not as frequently used by different classes, it doesn&apos;t make sense to put there.
        ///        {
        ///            _driver.CurrentDriver().Navigate().GoToUrl(url);
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string Navigate {
            get {
                return ResourceManager.GetString("Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///
        ///namespace Selenium
        ///{
        ///    public class RandomLocation //I believe I still need this, just locally
        ///    {
        ///        Random rand = new Random();
        ///        //public string[] RandomList = new string[5]; 
        ///        List&lt;string&gt; RandomList = new List&lt;string&gt;();
        ///
        ///        public RandomLocation() //constructor, but a more classic usage
        ///        {
        ///            RandomList[0] = Constants.Names[rand.Next(0, Constants.Names.Length)];
        ///            RandomList[1] = Constan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RandomLocation {
            get {
                return ResourceManager.GetString("RandomLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Selenium
        ///{
        ///    public class Textbox : BaseComponent
        ///    {
        ///        public void SendKeys(string text)
        ///        {
        ///            FindElement().SendKeys(text);
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string Textbox {
            get {
                return ResourceManager.GetString("Textbox", resourceCulture);
            }
        }
    }
}
